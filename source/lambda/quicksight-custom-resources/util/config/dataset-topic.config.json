{
    "PhysicalTableMap": {
        "3ea2cf00-14b3-4895-a166-9f28f0b84918": {
            "CustomSql": {
                "DataSourceArn": "{self.data_source.arn}",
                "Name": "topic",
                "SqlQuery": "with feed as (\n    select \n        distinct\n        tw.db_created_at as created_at,\n        tw.id_str,\n        tw.platform,\n        tw.account_name,\n        tw.user.id_str as source,\n        tw.user.name as name,\n        tw.in_reply_to_screen_name\n    from socialmediadb.twfeedstorage tw\n    where tw.db_created_at > current_timestamp - interval '15' day    \n    union\n    select distinct\n        rss.created_at,\n        rss.id_str,\n        rss.platform,\n        rss.account_name,\n        rss.entities.urls[1].expanded_url as source,\n        rss.metadata.topic as name,\n        rss.metadata.website\n    from socialmediadb.newsfeedstorage rss\n    where rss.created_at > current_timestamp - interval '15' day    \n), sentiment as (\n    select distinct\n        sentiment,\n        created_at,\n        id_str,\n        text,\n        translated_text,\n        platform,\n        account_name\n    from socialmediadb.sentiment\n    where created_at > current_timestamp - interval '15' day\n), topicmappings as (\n    select distinct\n        platform,\n        job_id,\n        job_timestamp,\n        topic,\n        id_str\n    from socialmediadb.topicmappings\n    where created_at > current_timestamp - interval '15' day\n), topics as (\n    select distinct\n        topic,\n        job_timestamp,\n        job_id,\n        term\n    from socialmediadb.topics\n    where created_at > current_timestamp - interval '15' day\n) select distinct\n    s.platform,\n    s.account_name,\n    s.sentiment,\n    s.id_str,\n    s.text,\n    s.translated_text,\n    s.created_at,\n    tm.topic,\n    tm.job_timestamp,\n    tm.job_id,\n    t.term,\n    feed.source,\n    feed.name,\n    feed.in_reply_to_screen_name\nfrom sentiment s\njoin feed\n    on (s.id_str = feed.id_str)\njoin topicmappings tm\n    on (tm.id_str = s.id_str and tm.platform = s.platform)\njoin topics t\n    on (t.topic = tm.topic and t.job_id = tm.job_id and t.job_timestamp = tm.job_timestamp)\nwhere s.translated_text like concat('%', t.term, '%')",
                "Columns": [
                    {
                        "Name": "platform",
                        "Type": "STRING"
                    },
                    {
                        "Name": "account_name",
                        "Type": "STRING"
                    },
                    {
                        "Name": "sentiment",
                        "Type": "STRING"
                    },
                    {
                        "Name": "id_str",
                        "Type": "STRING"
                    },
                    {
                        "Name": "text",
                        "Type": "STRING"
                    },
                    {
                        "Name": "translated_text",
                        "Type": "STRING"
                    },
                    {
                        "Name": "created_at",
                        "Type": "DATETIME"
                    },
                    {
                        "Name": "topic",
                        "Type": "STRING"
                    },
                    {
                        "Name": "job_timestamp",
                        "Type": "DATETIME"
                    },
                    {
                        "Name": "job_id",
                        "Type": "STRING"
                    },
                    {
                        "Name": "term",
                        "Type": "STRING"
                    },
                    {
                        "Name": "source",
                        "Type": "STRING"
                    },
                    {
                        "Name": "name",
                        "Type": "STRING"
                    },
                    {
                        "Name": "in_reply_to_screen_name",
                        "Type": "STRING"
                    }
                ]
            }
        }
    },
    "LogicalTableMap": {
        "3ea2cf00-14b3-4895-a166-9f28f0b84918": {
            "Alias": "topic",
            "DataTransforms": [
                {
                    "CreateColumnsOperation": {
                        "Columns": [
                            {
                                "ColumnName": "isTermPresent",
                                "ColumnId": "10c919e1-1b15-45fc-9b32-678de396f78f",
                                "Expression": "locate(toLower({translated_text}), {term})"
                            }
                        ]
                    }
                },
                {
                    "CreateColumnsOperation": {
                        "Columns": [
                            {
                                "ColumnName": "url_action",
                                "ColumnId": "befefdda-2e19-426c-a1b7-8a9a65a1df22",
                                "Expression": "ifelse({platform} = 'twitter', concat('twitter.com/anyuser/status/',{id_str}), substring({source}, strlen('https://')+1, strlen({source})+1))"
                            }
                        ]
                    }
                },
                {
                    "FilterOperation": {
                        "ConditionExpression": "{isTermPresent}>0.0"
                    }
                },
                {
                    "ProjectOperation": {
                        "ProjectedColumns": [
                            "platform",
                            "account_name",
                            "sentiment",
                            "id_str",
                            "text",
                            "translated_text",
                            "created_at",
                            "topic",
                            "job_timestamp",
                            "job_id",
                            "term",
                            "source",
                            "name",
                            "in_reply_to_screen_name",
                            "isTermPresent",
                            "url_action",
                            "is_verified_purchase"
                        ]
                    }
                }
            ],
            "Source": {
                "PhysicalTableId": "3ea2cf00-14b3-4895-a166-9f28f0b84918"
            }
        }
    },
    "OutputColumns": [
        {
            "Name": "platform",
            "Type": "STRING"
        },
        {
            "Name": "account_name",
            "Type": "STRING"
        },
        {
            "Name": "sentiment",
            "Type": "STRING"
        },
        {
            "Name": "id_str",
            "Type": "STRING"
        },
        {
            "Name": "text",
            "Type": "STRING"
        },
        {
            "Name": "translated_text",
            "Type": "STRING"
        },
        {
            "Name": "created_at",
            "Type": "DATETIME"
        },
        {
            "Name": "topic",
            "Type": "STRING"
        },
        {
            "Name": "job_timestamp",
            "Type": "DATETIME"
        },
        {
            "Name": "job_id",
            "Type": "STRING"
        },
        {
            "Name": "term",
            "Type": "STRING"
        },
        {
            "Name": "source",
            "Type": "STRING"
        },
        {
            "Name": "name",
            "Type": "STRING"
        },
        {
            "Name": "in_reply_to_screen_name",
            "Type": "STRING"
        },
        {
            "Name": "isTermPresent",
            "Type": "INTEGER"
        },
        {
            "Name": "url_action",
            "Type": "STRING"
        },
        {
            "Name": "is_verified_purchase",
            "Type": "STRING"
        }
    ]
}
